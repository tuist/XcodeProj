# https://help.github.com/en/github/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#jobsjob_idname
name: XcodeProj

on:
  push:
    branches:
      - main
  pull_request: {}

concurrency:
  group: xcodeproj-${{ github.head_ref }}
  cancel-in-progress: true

env:
  MISE_EXPERIMENTAL: 1

jobs:
  build:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Build
        run: swift build -c release
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: swift build -c release
  test:
    name: Test (macOS / Xcode)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Run tests
        run: swift test --enable-code-coverage
      - name: Send test coverage report
        run: bash <(curl -s https://codecov.io/bash)
  test-linux:
    name: Test (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Git config
        run: |
          git config --global user.email "xcodeproj@tuist.io"
          git config --global user.name "xcodeproj"
          git config --global init.defaultBranch main
      - name: Build and run tests
        run: swift test --enable-test-discovery

  lint:
    name: Lint
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jdx/mise-action@v2
      - run: mise run lint
